#O Log4j divide os logs em 5 níveis hierárquicos,São eles: DEBUG, INFO, WARN, ERROR, FATAL.
# Se ativar o nível INFO, automaticamente todos os níveis acima de INFO e claro o próprio INFO serão monitorados. Se ativar o ERROR apenas ele e o FATAL será ativado
log4j.rootLogger=ERROR,stdout,file

#### Usando 2 appenders, 1 para logar no console (stdout) , outro para um arquivo (file)
#### Ou seja, mostrará o log no console e salvará em um arquivo

#### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
### Pattern que mostra o nome do arquivo e numero da linha, porem #sem data e hora
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n


#### O segundo appender escreve em um arquivo e faz um bkp ao #atingir o max

log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=C:\\projetos\\springboot2-essentials\\log4j-application.log
### Controla o tamanho maximo do arquivo
log4j.appender.file.MaxFileSize=5MB
### Faz backup dos arquivos de log (apenas 10)
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#####imprime no formato dia/mes/ano e imprime o numero da #linha L
log4j.appender.file.layout.ConversionPattern=%-2d{dd/MM/yy HH:mm:ss} [%t] %5p %c:%L - %m%n

